{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAO,SAACC,GACjB,OACA,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,GAAGC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACf,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJbC,EAAU,SAACR,GAEpB,OAAO,qBACPC,UAAU,YADH,SAGCD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACzB,cAAC,EAAD,CAEDA,QAASA,GADJA,EAAQC,UCNZM,G,MAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAGX,uBACAZ,UAAU,SACba,KAAM,SACNF,YAAaA,EACbG,SAAUF,MCoCLG,G,wDAxCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IALH,E,qDAUd,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAG1C,WAAS,IAAD,OAEN,EAAkCE,KAAKR,MAA/BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OAEI,sBAAK3B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAEzD,cAAC,EAAD,CACAvB,SAAUiB,W,GAjCAO,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.83f1e102.chunk.js","sourcesContent":["import './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return(\r\n    <div className='card-container'>\r\n        <img alt=\"\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>)\r\n}","import './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList =(props) => {\r\n    \r\n    return <div \r\n    className=\"card-list\">\r\n        {\r\n            props.monsters.map(monster =>\r\n            (<Card \r\n            key={monster.id}\r\n            monster={monster}\r\n            />\r\n            ))\r\n         }\r\n    </div>\r\n}","import './search-box.styles.css';\r\n\r\n\r\n\r\nexport const SearchBox =({placeholder,handleChange}) => \r\n     (\r\n        \r\n             <input \r\n             className=\"search\"\r\n          type =\"search\"\r\n          placeholder={placeholder}\r\n          onChange={handleChange}\r\n        />\r\n        \r\n    );\r\n\r\n","import {Component} from 'react';\r\nimport { CardList } from './components/card-list/card-list';\r\nimport {SearchBox } from './components/search-box/search-box.component';\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchField: '',\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({monsters: users}))\r\n  }\r\n\r\n  render(){\r\n  \r\n    const { monsters, searchField } = this.state;\r\n    const filteredMonsters = monsters.filter(monster =>\r\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\r\n\r\n    return(\r\n      \r\n        <div className=\"App\">\r\n        <h1>Monster Rolodex</h1>\r\n        <SearchBox \r\n          placeholder='search monsters'\r\n          handleChange={e => this.setState({searchField:e.target.value})}\r\n        />\r\n        <CardList\r\n        monsters={filteredMonsters}>\r\n        \r\n        </CardList>\r\n        \r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}